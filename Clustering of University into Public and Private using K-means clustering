#I attempted to use KMeans Clustering to Cluster Universities into to two groups, Private and Public on 

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

#Import the Data

df=pd.read_csv("College_Data",index_col=0)
df.head()

df.info()

df.describe()
df.shape

#Data Visualizations using Seaborn

#Scatterplot of Grad.Rate versus Room.Board where the points are colored by the Private column
sns.lmplot(x="Room.Board", y="Grad.Rate", data=df, hue="Private")

#Scatterplot of F.Undergrad versus Outstate where the points are colored by the Private column
sns.lmplot(x="F.Undergrad", y="Outstate", data=df, hue="Private", col=None)

#Histogram showing Out of State Tuition based on the Private column
g=sns.FacetGrid(df,hue="Private",palette="coolwarm",size=6,aspect=2)
g=g.map(plt.hist,"Outstate",bins=20,alpha=0.7)

f=sns.FacetGrid(df,hue="Private",palette="coolwarm",size=6,aspect=2)
f=f.map(plt.hist,"Grad.Rate",bins=30)

df[df["Grad.Rate"]>100]

df["Grad.Rate"]["Cazenovia College"]=100

df[df["Grad.Rate"]>100]

f=sns.FacetGrid(df,hue="Private",palette="coolwarm",size=6,aspect=2)
f=f.map(plt.hist,"Grad.Rate",bins=30)

#K Means Cluster Creation

from sklearn.cluster import KMeans
KMeans=KMeans(n_clusters=2)
df1=df.drop("Private",axis=1)
KMeans.fit(df1)

#Cluster center vectors
KMeans.cluster_centers_

def converter(cluster):
    if cluster=="Yes":
        return 1
    else:
        return 0
df["Cluster"]=df["Private"].apply(converter)
df.head()

#Cluster Labels vectors
KMeans.labels_

#Evaluation
from sklearn.metrics import confusion_matrix,classification_report
print(confusion_matrix(df['Cluster'],KMeans.labels_))
print(classification_report(df['Cluster'],KMeans.labels_))
