import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns

fashion_train=pd.read_csv("fashion-mnist_train.csv")
fashion_test=pd.read_csv("fashion-mnist_test.csv")
fashion_train.head()

fashion_train.shape
training=np.array(fashion_train,dtype="float")
testing=np.array(fashion_test,dtype="float")
print(training)
print(testing)

import random
i=random.randint(1,60000)
plt.imshow(training[i,1:].reshape(28,28))
label=training[i,0]
label

x_train=training[:,1:]/255
y_train=training[:,0]
x_test=testing[:,1:]/255
y_test=testing[:,0]

from sklearn.model_selection import train_test_split
x_train,x_validate,y_train,y_validate =train_test_split(x_train,y_train,test_size=0.2,random_state=12345)
x_train=x_train.reshape(x_train.shape[0],*(28,28,1))
x_test=x_test.reshape(x_test.shape[0],*(28,28,1))
x_validate=x_validate.reshape(x_validate.shape[0],*(28,28,1))

x_train.shape
x_test.shape
x_validate.shape

import tensorflow as tf
import keras
from keras.models import Sequential
from keras.layers import Conv2D,MaxPooling2D,Dense,Flatten,Dropout
from keras.optimizers import Adam

cnn_model=Sequential()
cnn_model.add(Conv2D(32,3,3 ,input_shape=(28,28,1),activation="relu"))
cnn_model.add(MaxPooling2D(pool_size=(2,2)))
cnn_model.add(Flatten())

cnn_model.add(Dense(output_dim=32,activation="relu"))
cnn_model.add(Dense(output_dim=10,activation="sigmoid"))

cnn_model.compile(loss="sparse_categorical_crossentropy",optimizer=Adam(lr=0.001),metrics=["accuracy"])
epochs=8
cnn_model.fit(x_train,y_train,batch_size=512,nb_epoch=epochs,verbose=1,validation_data=(x_validate,y_validate))
evaluation=cnn_model.evaluate(x_test,y_test)
print("Accuracy is : {:.3f} ".format(evaluation[1]))
predicted_class=cnn_model.predict_classes(x_test)

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,predicted_class)
cm

sns.heatmap(cm,annot=True)

from sklearn.metrics import classification_report

class_report=classification_report(y_test,predicted_class)
print(class_report)


